!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var s=t();for(var n in s)("object"==typeof exports?exports:e)[n]=s[n]}}(this,(function(){return function(e){var t={};function s(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}return s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)s.d(n,o,function(t){return e[t]}.bind(null,o));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t){e.exports=class{constructor(e){this.socketDomain=e,this.messageArr=[],this.messageALl={},this.sessid="",this.SocketTask=null,this.isConnectedSocket=!1,this.reConnectTimer=null,this.loopConnectTimer=null,this.loopConnectBackTimer=null}initSocket(){this.SocketTask=this.connectSocket(),this.listenConnectError(),this.listenConnectSuccess(),this.listenMessageBack(),this.listenSocketClose()}connectSocket(){return new WebSocket(this.socketDomain)}listenConnectSuccess(){this.SocketTask.onopen=e=>{this.isConnectedSocket=!0,this.clearAllTimer()}}listenSocketClose(){this.SocketTask.onclose=e=>{this.clearAllTimer(),this.isConnectedSocket&&(this.SocketTask.close(),this.sessid="",this.reConnectTimer=setInterval(()=>{this.initSocket()},5e3))}}listenConnectError(){this.SocketTask.onerror=e=>{}}sendSocketMessage(e){try{this.SocketTask.send(JSON.stringify(e))}catch(e){}}listenMessageBack(){this.SocketTask.onmessage=({data:e})=>{let t=(e=JSON.parse(e)).cmd;this.messageALl.cb&&this.messageALl.cb(e);for(const s of this.messageArr)if(s.cmd===t)return s.cb(e.msg)}}addListener(e,t){this.messageArr.push({cmd:e,cb:t})}listenAll(e){this.messageALl={cb:e}}removeListener(e){this.messageArr=this.messageArr.filter(t=>t.cmd!==e)}removeAllListener(){this.messageArr=[]}closeSocket(){this.isConnectedSocket&&(this.SocketTask.close(),this.isConnectedSocket=!1)}clearAllTimer(){this.reConnectTimer&&(clearInterval(this.reConnectTimer),this.reConnectTimer=null),this.loopConnectTimer&&(clearInterval(this.loopConnectTimer),this.loopConnectTimer=null),this.loopConnectBackTimer&&(clearInterval(this.loopConnectBackTimer),this.loopConnectBackTimer=null)}}}])}));